// <auto-generated />
using System;
using MaritimumCruzeiros.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CruzeirosEmporio.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20230314232814_Version4")]
    partial class Version4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CruzeirosEmporio.Models.Cruzeiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataChegada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPartida")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NavioId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NavioId");

                    b.ToTable("Cruzeiros");
                });

            modelBuilder.Entity("CruzeirosEmporio.Models.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CruzeiroId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataHoraEvento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CruzeiroId");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("CruzeirosEmporio.Models.Navio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Capacidade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Navios");
                });

            modelBuilder.Entity("CruzeirosEmporio.Models.Quarto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Capacidade")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IndFechado")
                        .HasColumnType("bit");

                    b.Property<int?>("NavioId")
                        .HasColumnType("int");

                    b.Property<string>("Piso")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NavioId");

                    b.ToTable("Quartos");
                });

            modelBuilder.Entity("CruzeirosEmporio.Models.SexoTripulante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SexoTripulante");
                });

            modelBuilder.Entity("CruzeirosEmporio.Models.TipoTripulante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoTripulante");
                });

            modelBuilder.Entity("CruzeirosEmporio.Models.Tripulante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CruzeiroId")
                        .HasColumnType("int");

                    b.Property<string>("Documento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuartoId")
                        .HasColumnType("int");

                    b.Property<int>("SexoTripulanteId")
                        .HasColumnType("int");

                    b.Property<int>("TipoTripulanteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CruzeiroId");

                    b.HasIndex("QuartoId");

                    b.HasIndex("SexoTripulanteId");

                    b.HasIndex("TipoTripulanteId");

                    b.ToTable("Tripulantes");
                });

            modelBuilder.Entity("CruzeirosEmporio.Models.Cruzeiro", b =>
                {
                    b.HasOne("CruzeirosEmporio.Models.Navio", "Navio")
                        .WithMany("Cruzeiro")
                        .HasForeignKey("NavioId");

                    b.Navigation("Navio");
                });

            modelBuilder.Entity("CruzeirosEmporio.Models.Evento", b =>
                {
                    b.HasOne("CruzeirosEmporio.Models.Cruzeiro", "Cruzeiro")
                        .WithMany("Eventos")
                        .HasForeignKey("CruzeiroId");

                    b.Navigation("Cruzeiro");
                });

            modelBuilder.Entity("CruzeirosEmporio.Models.Quarto", b =>
                {
                    b.HasOne("CruzeirosEmporio.Models.Navio", "Navio")
                        .WithMany()
                        .HasForeignKey("NavioId");

                    b.Navigation("Navio");
                });

            modelBuilder.Entity("CruzeirosEmporio.Models.Tripulante", b =>
                {
                    b.HasOne("CruzeirosEmporio.Models.Cruzeiro", "Cruzeiro")
                        .WithMany("Tripulantes")
                        .HasForeignKey("CruzeiroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CruzeirosEmporio.Models.Quarto", "Quarto")
                        .WithMany("Tripulantes")
                        .HasForeignKey("QuartoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CruzeirosEmporio.Models.SexoTripulante", "SexoTripulante")
                        .WithMany()
                        .HasForeignKey("SexoTripulanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CruzeirosEmporio.Models.TipoTripulante", "TipoTripulante")
                        .WithMany()
                        .HasForeignKey("TipoTripulanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cruzeiro");

                    b.Navigation("Quarto");

                    b.Navigation("SexoTripulante");

                    b.Navigation("TipoTripulante");
                });

            modelBuilder.Entity("CruzeirosEmporio.Models.Cruzeiro", b =>
                {
                    b.Navigation("Eventos");

                    b.Navigation("Tripulantes");
                });

            modelBuilder.Entity("CruzeirosEmporio.Models.Navio", b =>
                {
                    b.Navigation("Cruzeiro");
                });

            modelBuilder.Entity("CruzeirosEmporio.Models.Quarto", b =>
                {
                    b.Navigation("Tripulantes");
                });
#pragma warning restore 612, 618
        }
    }
}
